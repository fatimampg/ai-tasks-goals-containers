generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  email     String     @unique
  name      String
  password  String
  tasks     Task[]
  goals     Goal[]
  progress  Progress[]
}

enum TASK_STATUS {
  TO_DO
  IN_PROGRESS
  COMPLETED
}

enum TASK_PRIORITY {
  LOW
  MODERATE
  HIGH
}

model Task {
  id                  Int           @id @default(autoincrement())
  description         String        @db.VarChar(255)
  deadline            DateTime
  belongsToId         String
  belongsTo           User          @relation(fields: [belongsToId], references: [id])
  status              TASK_STATUS   @default(IN_PROGRESS)
  percentageCompleted Int? //associated to status IN_PROGRESS
  priority            TASK_PRIORITY @default(MODERATE)
  relatedGoal         Goal?         @relation(fields: [relatedGoalId], references: [id])
  relatedGoalId       Int?
  category            CATEGORY?

  @@unique([id, belongsToId])
}

enum GOAL_STATUS {
  ACHIEVED
  IN_PROGRESS
  NEEDS_IMPROVEMENT
}

enum CATEGORY {
  CAREER
  PERSONAL_DEVELOPMENT
  HEALTH_AND_WELLNESS
  FINANCIAL
  FAMILY_AND_FRIENDS
  LEISURE
}

model Goal {
  id          Int          @id @default(autoincrement())
  description String       @db.VarChar(255)
  month       Int
  year        Int
  belongsToId String
  belongsTo   User         @relation(fields: [belongsToId], references: [id])
  tasks       Task[]
  category    CATEGORY
  status      GOAL_STATUS?

  @@unique([id, belongsToId])
}

model Progress {
  id                  Int    @id @default(autoincrement())
  month               Int
  year                Int
  summary             String
  recommendations     String
  progressBelongsToId String
  belongsTo           User   @relation(fields: [progressBelongsToId], references: [id])
}
